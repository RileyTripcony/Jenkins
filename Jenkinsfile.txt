pipeline {
    agent any
    
    environment {
        GITHUB_REPO_URL = 'https://github.com/RileyTripcony/Jenkins.git'
        TESTING_ENVIRONMENT = '6.1'
        PRODUCTION_ENVIRONMENT = 'ProductionServer'
    }
    
    stages {
        stage('Build') {
            steps {
                echo "Stage 1: Build - Building the code using Maven."
                echo "Tool: Maven"
                echo "Fetching source code from ${env.GITHUB_REPO_URL}"
                echo "Compiling the code and packaging..."
                // Example build command
                // 'mvn clean'
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo "Stage 2: Unit and Integration Tests - Running unit and integration tests."
                echo "Tool: Maven"
                echo "Executing test suites..."
                // Example test command
                // sh 'mvn test'
            }
            post {
                always {
                    script {
                        // Archive the logs from this stage
                        archiveArtifacts artifacts: '**/target/surefire-reports/*.txt', allowEmptyArchive: true
                        // Send email with log attachment
                        emailext(
                            to: "triptripcony@gmail.com",
                            subject: "Test Stage Status - ${currentBuild.currentResult}",
                            body: "Unit and integration tests completed with status: ${currentBuild.currentResult}",
                            attachmentsPattern: '**/target/surefire-reports/*.txt'
                        )
                    }
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo "Stage 3: Code Analysis - Analyzing code quality."
                echo "Tool: SonarQube"
                echo "Running static code analysis..."
                // Example code analysis command
                // sh 'mvn sonar:sonar'
            }
            post {
                always {
                    mail to: "triptripcony@gmail.com",
                         subject: "Code Analysis Status",
                         body: "Code analysis completed with status: ${currentBuild.currentResult}"
                }
            }
        }
        
        stage('Security Scan') {
            steps {
                echo "Stage 4: Security Scan - Scanning code for security vulnerabilities."
                echo "Tool: OWASP Dependency-Check"
                echo "Performing security scan..."
                // Example security scan command (not executed)
                // sh 'mvn dependency-check:check'
            }
            post {
                always {
                    mail to: "triptripcony@gmail.com",
                         subject: "Security Scan Status",
                         body: "Security scan completed with status: ${currentBuild.currentResult}"
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo "Stage 5: Deploy to Staging - Deploying application to staging environment."
                echo "Environment: ${env.TESTING_ENVIRONMENT}"
                // Example deployment command (not executed)
                // sh 'scp target/*.war user@staging-server:/path/to/deploy'
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo "Stage 6: Integration Tests on Staging - Running tests in staging environment."
                // Example integration test command (not executed)
                // sh 'curl -X GET http://staging-server/api/test'
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo "Stage 7: Deploy to Production - Deploying application to production server."
                echo "Environment: ${env.PRODUCTION_ENVIRONMENT}"
                // Example production deployment command (not executed)
                // sh 'scp target/*.war user@production-server:/path/to/deploy'
            }
        }
    }
}
